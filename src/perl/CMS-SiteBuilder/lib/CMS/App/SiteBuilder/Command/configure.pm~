package CMS::App::SiteBuilder::Command::configure;
########################################################################
# ABSTRACT:  CMS::App::SiteBuilder::Command::build_config -     
#            SiteBuilder command to prompt user for info to build a 
#            site config that actually is used consturct the site.
########################################################################
use Moose;
use Moose::Util qw(apply_all_roles);
use XML::Simple;

use Term::UI;
use Term::ReadLine;
use Proc::InvokeEditor;
use Text::Template;


extends qw(MooseX::App::Cmd::Command);

sub BUILD {
  my ($self) = @_;
  my @roles = (qw|CMS::Configuration|);
  apply_all_roles($self, @roles);
}
  
# Bring into the cms object the various aggregate objects 
# that use data from resource files to initialize themselves.
sub execute {
  my ( $self, $opt, $args ) = @_;
   $self->create_config();
}

has user_responses => (
    is=>'rw',
    isa=>'HashRef',
    lazy=>1,
    builder=>'prompt_user'
    );

has template_engine => (
    is=>'rw',
    lazy_build=>1,
    );

sub _build_template_engine {
    my ($self) = @_;
    my $template = Text::template->new(TYPE=>'STRING', SOURCE=>$self->config->default_template);
    return $template;
}

sub prompt_user {
  my ($self) = @_;
  my $term = Term::ReadLine->new('cms');
  my %options = ();
  $options{bric_admin_user} = $term->get_reply( 
					       prompt => 'What is bric admin user name?',
					       default => 'admin',
					      );
  $options{bric_admin_password} = $term->get_reply( 
						   prompt => 'What is bric password user name?',
						   default => 'changeme',
						  );
  $options{domain_ip} = $term->get_reply( 
					 prompt => 'What is bric server ip?',
					 default => sub { return '192.168.1.116'; }
					);
  $options{domain_port} = $term->get_reply(
					   prompt => 'What is bric server port?',
					   default => 7000
					  );
  $options{base_bric_dir} = $term->get_reply( 
					     prompt => 'What is bric base dir?',
					     default => '/usr/local/bricolage',
					    );
  $options{base_site_dir} = $term->get_reply( 
					     prompt => 'What is bric site resource dir?' 
					    );
# $options{domain} = $term->get_reply(prompt => 'What is bric server domain name?' );
# $options{host_name} = $term->get_reply( prompt => 'What is bric server host name?');
  $options{site_name} = $term->get_reply( prompt => 'What is site name?' );
  $options{deploy_date} = $term->get_reply( 
					   prompt => 'What is sites deploy date?',
					   default => sub { return time; }
					  );
  $options{expire_date} = $term->get_reply( 
					   prompt => 'What is sites expire date?',
					   default => sub { return time; }
					  );
  $options{config_file_path} = $term->get_reply(
						prompt => 'What is config file name?',
						default => "$options{site_name}.conf.xml",
					       );
 
 $options{edit_config} = $term->ask_yn(
                        prompt => 'Would you like to the resulting config file in your editor',
                        default => 'y',
                );
return \%options;
}


sub create_config {
    my ($self) = @_;

    my $text = $self->template_engine->fill_in(HASH=>$self->user_responses);

    if($self->user_responses->{edit_config}) {
      my $edited_text = Proc::InvokeEditor->edit($text);
    }
}

no Moose;
1;

