Want the user to be able create custom reports.  There will be some common sense defaults defined

Reports will be collections of metrics
Metrics will functions  that use the various data needed to generate the meaning full representation of the metric
Metrics have a way of being displayed in both summary and detailed form.

Reports can be schedule to run a certain intervals as metrics might have a life span or other contraint
Reports can be generated on the fly.

Reports can be added to the dashboard

Reports can be a graph or tablular data 



(defn generate-report
  "take query-results and vectors each with the following info:
   [header-display [key(s)] manipulation-function]
 
   key(s) is a vector of nested keywords. e.g. [:operator :first-name]
   which is passed to a get-in call
 
   manipulation-function is the function to apply to the item.
 
   returns a map with :headers and :rows"
  [query-results & report-items]
  (let [headers (vec (map first report-items))
        process (fn [ks f]
                  #(f (get-in % ks)))
        columns (map #(process (% 1) (% 2)) report-items)
        rows (for [r query-results]
               ((apply juxt columns) r))]
    {:headers headers
     :rows rows}))