Bing Estimates

$6.70 per 1 hour yielding 6 clicks in that hour
CTR of 1.01 which is a pretty good start
Average position of 3.88 
Average CPC $1.03

Recommendation is $20 per hour with an average of $1.35 to increase the Average position and then have the budget to handle the increase in clicks

for Bing that works out to 20hrs x $20 x 30 = $12,000 per month

Google Display 
       4.5 clicks per hour at $2.50 for those clicks
Average CPC $0.57

for Google Display $5 x 24 x 30 = $3600 per month

Disolve away pain
Disolve away nausa
Disolve away insominia

Get rid  live 

Just target the serious ill patient
when people find this site they think they have found eden 
we just talk comfort 

awake at night need comfort
Free in home vist 

Affordable for all budgets
Financial assistance Sliding scale
Products start at $6.00
Direct manufactor to patient 
Do you suffer from nausa, pain or insomnia
Get rid of pain in form
Get newsletter to be bigger
Email specific scientific information 

Make a Gusto version as well a Glenn version

Introductin  	     

turn the form box into a puffy clould or blaster.
Move it to the up left
Text: Submit you information now for a free in home consultation
Move the wheel chair 

Get rid the of the guy grabbing back and head any

pain and sleep into seperate pages




Logo where the wheel chair
strike the bald bitch
Header: Pain relief without the side effects - The Patient Comfort Way
Increase size of font
Try to de-emphasize the negatives like nausa
Come up with a character
Sleep like a baby - picture baby
Senseless use of babies and animals
Make the support group button bigger

Welcome to the promise land of pain relief

Organizing the landing page enlive html to best effect.

* How to integrate the CMS and the landing site server so that we can have real previews

* Parts of Landing Site
json representation of data destined to be consumed by a snippet something of a control
html of semantic content.  

*Parts of enlive
** Template Inheritance
** Snippets
** Selector syntax

Reusing and plugin templates and snippets together with Enlive is just writing some Clojure code. so there seems to be two parts to these styles of landing sites
The process of Templating now combines the following activity
* build up the base dom using template inhertances producing top level view functions
The view functions can be organized into namespaces and saved in the file heirarchy following the namespace.

* top level views enlive template and helper snippets are combined in a file that names this premade landing site available for user customization.

* User customization comes in the following forms
** CSS3 rules
Each top level view that creates the landing site host dom is built using html5 boilder plate and as many best practices advocated in bullet proof and other places.

Further to take advantage of the natural synergy between repeating sets of elements in the dom, collections of busness model data, and clojure lisp sequence interface so as to all the customization of the structural part of the host dom.

* Top level component controls can be assembled into top level view functions that use snippets.

* It might be nice to have a controller that consists of a collection views that take a item view along with a list of item in the abstract.

The lead list summary component seems like a good candidate

want to be able to use the same templates for both the server and client side so there can't be any code javascript or clojure in these templates.

The reason begin is that it will make the tool for interactively editing the landing site much easier.   The same model and views can be used to generate the host dom on the server so that in production the user gets the application all prepopulated.  But the application can be deployed another way as a javascript appliation that renders the model data it receives from the clojure server application using the same templates but this time its all the dom manipulate is on the client side

Since the landing page can be a javascript program we can have applied to a interactive div with in the landing site builder editor.  Further now tools can be attached to the div that is hosting the app.  The editor can have a component selector that the user can drag into the app changing it and seeing it change.

To that end it is important that the pure html templates have plausible example data when possible so that the design can get an idea of how things will look

There will also be a component editor that is hosted in the landing site builder.

So each component needs several parts
* pure html file that has the structural dom
* enlive selector and snippets
* component editor form schema
* component tuple that relates the editor schema, snippet/view function, data provider function
* component meta data that provides a list of child snippets to nest in the component  and a list of data provider functions
* These data provider functions need to have a url mapping so that the client can directly access the json data

enlive templates -> bricolage stories -> unique web page dom
display object components  -> bricolage elements -> hosted in larger organizaing dom/web page

a control component editor function is used by the editor to build the editor for the compoent




























